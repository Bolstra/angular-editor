{"version":3,"file":"bolstra-angular-editor.js.map","sources":["ng://@bolstra/angular-editor/lib/angular-editor.service.ts","ng://@bolstra/angular-editor/lib/config.ts","ng://@bolstra/angular-editor/lib/angular-editor-toolbar.component.ts","ng://@bolstra/angular-editor/lib/angular-editor.component.ts","ng://@bolstra/angular-editor/lib/angular-editor.module.ts"],"sourcesContent":["import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpEvent} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\nimport {CustomClass, Tag} from './config';\n\nexport interface UploadResponse {\n  imageUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularEditorService {\n\n  savedSelection: Range | null;\n  selectedText: string;\n  uploadUrl: string;\n\n\n  constructor(private http: HttpClient, @Inject(DOCUMENT) private document: any) {\n  }\n\n  /**\n   * Executed command from editor header buttons exclude toggleEditorMode\n   * @param command string from triggerCommand\n   */\n  executeCommand(command: string) {\n    const commands = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'pre'];\n    if (commands.includes(command)) {\n      this.document.execCommand('formatBlock', false, command);\n    }\n\n    this.document.execCommand(command, false, null);\n  }\n\n  /**\n   * Create URL link\n   * @param url string from UI prompt\n   */\n  createLink(url: string) {\n    if (!url.includes('http')) {\n      this.document.execCommand('createlink', false, url);\n    } else {\n      const newUrl = `<a href='${url}' target='_blank'>${this.selectedText}</a>`;\n      this.insertHtml(newUrl);\n    }\n  }\n\n  /**\n   * insert color either font or background\n   *\n   * @param color color to be inserted\n   * @param where where the color has to be inserted either text/background\n   */\n  insertColor(color: string, where: string): void {\n    const restored = this.restoreSelection();\n    if (restored) {\n      if (where === 'textColor') {\n        this.document.execCommand('foreColor', false, color);\n      } else {\n        this.document.execCommand('hiliteColor', false, color);\n      }\n    }\n  }\n\n  /**\n   * Set font name\n   * @param fontName string\n   */\n  setFontName(fontName: string) {\n    this.document.execCommand('fontName', false, fontName);\n  }\n\n  /**\n   * Set font size\n   * @param fontSize string\n   */\n  setFontSize(fontSize: string) {\n    this.document.execCommand('fontSize', false, fontSize);\n  }\n\n  /**\n   * Create raw HTML\n   * @param html HTML string\n   */\n  insertHtml(html: string): void {\n\n    const isHTMLInserted = this.document.execCommand('insertHTML', false, html);\n\n    if (!isHTMLInserted) {\n      throw new Error('Unable to perform the operation');\n    }\n  }\n\n  /**\n   * save selection when the editor is focussed out\n   */\n  saveSelection(): any {\n    if (window.getSelection) {\n      const sel = window.getSelection();\n      if (sel.getRangeAt && sel.rangeCount) {\n        this.savedSelection = sel.getRangeAt(0);\n        this.selectedText = sel.toString();\n      }\n    } else if (this.document.getSelection && this.document.createRange) {\n      this.savedSelection = document.createRange();\n    } else {\n      this.savedSelection = null;\n    }\n  }\n\n  /**\n   * restore selection when the editor is focussed in\n   *\n   * saved selection when the editor is focussed out\n   */\n  restoreSelection(): boolean {\n    if (this.savedSelection) {\n      if (window.getSelection) {\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(this.savedSelection);\n        return true;\n      } else if (this.document.getSelection /*&& this.savedSelection.select*/) {\n        // this.savedSelection.select();\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  /** check any slection is made or not */\n  private checkSelection(): any {\n\n    const slectedText = this.savedSelection.toString();\n\n    if (slectedText.length === 0) {\n      throw new Error('No Selection Made');\n    }\n\n    return true;\n  }\n\n  /**\n   * Upload file to uploadUrl\n   * @param file\n   */\n  uploadImage(file: File): Observable<HttpEvent<UploadResponse>> {\n\n    const uploadData: FormData = new FormData();\n\n    uploadData.append('file', file, file.name);\n    return this.http.post<UploadResponse>(this.uploadUrl, uploadData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n\n  /**\n   * Insert image with Url\n   * @param imageUrl\n   */\n  insertImage(imageUrl: string) {\n    this.document.execCommand('insertImage', false, imageUrl);\n  }\n\n  insertVideo(videoUrl: string) {\n    if (videoUrl.match('www.youtube.com')) {\n      this.insertYouTubeVideoTag(videoUrl);\n    }\n    if (videoUrl.match('vimeo.com')) {\n      this.insertVimeoVideoTag(videoUrl);\n    }\n  }\n\n  insertTag(tag: Tag) {\n    if (tag === null) {\n      return;\n    }\n    const tagS = `${tag.group} -> ${tag.name}`;\n    const size = tagS.length;\n    const tagHtml = `\n      <input tag='${tag.propertyName}' value='${tagS}'\n        readonly size=${size}\n        style='background-color:lightgrey;\n        padding: 5px;\n        border-radius: 5px;\n        text-align: center;\n        border-left:5px solid red;\n        border-right:5px solid red;\n        border-top:0;\n        border-bottom:0;'\n        ></input>\n    `;\n    this.insertHtml(tagHtml);\n  }\n\n  setDefaultParagraphSeparator(separator: string) {\n    this.document.execCommand('defaultParagraphSeparator', false, separator);\n  }\n\n  createCustomClass(customClass: CustomClass) {\n    let newTag = this.selectedText;\n    if (customClass) {\n      const tagName = customClass.tag ? customClass.tag : 'span';\n      newTag = `<${tagName} class='${customClass.class}'>${this.selectedText}</${tagName}>`;\n    }\n    this.insertHtml(newTag);\n  }\n\n  private insertYouTubeVideoTag(videoUrl: string): void {\n    const id = videoUrl.split('v=')[1];\n    const imageUrl = `https://img.youtube.com/vi/${id}/0.jpg`;\n    const thumbnail = `\n      <div style='position: relative'>\n        <img style='position: absolute; left:200px; top:140px'\n             src=\"https://img.icons8.com/color/96/000000/youtube-play.png\"\n        <a href='${videoUrl}' target='_blank'>\n          <img src=\"${imageUrl}\" alt=\"click to watch\"/>\n        </a>\n      </div>`;\n    this.insertHtml(thumbnail);\n  }\n\n  private insertVimeoVideoTag(videoUrl: string): void {\n    const sub = this.http.get<any>(`https://vimeo.com/api/oembed.json?url=${videoUrl}`).subscribe(data => {\n      const imageUrl = data.thumbnail_url_with_play_button;\n      const thumbnail = `<div>\n        <a href='${videoUrl}' target='_blank'>\n          <img src=\"${imageUrl}\" alt=\"${data.title}\"/>\n        </a>\n      </div>`;\n      this.insertHtml(thumbnail);\n      sub.unsubscribe();\n    });\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport interface CustomClass {\n  name: string;\n  class: string;\n  tag?: string;\n}\n\nexport interface Font {\n  name: string;\n  class: string;\n}\nexport interface Tag {\n  propertyName: string;\n  name: string;\n  group: string;\n}\n\nexport interface AngularEditorConfig {\n  editable?: boolean;\n  spellcheck?: boolean;\n  height?: 'auto' | string;\n  minHeight?: '0' | string;\n  maxHeight?: 'auto' | string;\n  width?: 'auto' | string;\n  minWidth?: '0' | string;\n  translate?: 'yes' | 'now' | string;\n  enableToolbar?: boolean;\n  showToolbar?: boolean;\n  placeholder?: string;\n  defaultParagraphSeparator?: string;\n  defaultFontName?: string;\n  defaultFontSize?: '1' | '2' | '3' | '4' | '5' | '6' | '7' |string;\n  uploadUrl?: string;\n  fonts?: Font[];\n  customClasses?: CustomClass[];\n  tagList?: Observable<Tag[]>;\n}\n\nexport const angularEditorConfig: AngularEditorConfig = {\n  editable: true,\n  spellcheck: true,\n  height: 'auto',\n  minHeight: '0',\n  maxHeight: 'auto',\n  width: 'auto',\n  minWidth: '0',\n  translate: 'yes',\n  enableToolbar: true,\n  showToolbar: true,\n  placeholder: 'Enter text here...',\n  defaultParagraphSeparator: '',\n  defaultFontName: '',\n  defaultFontSize: '',\n  fonts: [\n    {class: 'arial', name: 'Arial'},\n    {class: 'times-new-roman', name: 'Times New Roman'},\n    {class: 'calibri', name: 'Calibri'},\n    {class: 'comic-sans-ms', name: 'Comic Sans MS'}\n  ],\n  uploadUrl: 'v1/image'\n};\n","import {Component, OnInit, ElementRef, EventEmitter, Inject, Input, Output, Renderer2, ViewChild} from '@angular/core';\nimport {AngularEditorService} from './angular-editor.service';\nimport {HttpResponse} from '@angular/common/http';\nimport {DOCUMENT} from '@angular/common';\nimport {CustomClass, Font, Tag} from './config';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'angular-editor-toolbar',\n  templateUrl: './angular-editor-toolbar.component.html',\n  styleUrls: ['./angular-editor-toolbar.component.scss']\n})\n\nexport class AngularEditorToolbarComponent implements OnInit {\n  id = '';\n  htmlMode = false;\n  showToolbar = true;\n  linkSelected = false;\n  block = 'default';\n  defaultFontId;\n  fontId = 0;\n  fontSize = '5';\n  fonts: Font[];\n  tagList?: Observable<Tag[]>;\n\n  customClassId = -1;\n  customClasses: CustomClass[];\n  currentTag: Tag = null;\n  tagGroups: any[] = [];\n\n  tagMap = {\n    BLOCKQUOTE: 'indent',\n    A: 'link'\n  };\n\n  select = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'P', 'PRE', 'DIV'];\n\n  buttons = ['bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', 'justifyLeft', 'justifyCenter',\n    'justifyRight', 'justifyFull', 'indent', 'outdent', 'insertUnorderedList', 'insertOrderedList', 'link'];\n\n  @Output() execute: EventEmitter<string> = new EventEmitter<string>();\n\n  @ViewChild('fileInput') myInputFile: ElementRef;\n\n\n  constructor(private renderer: Renderer2,\n              private editorService: AngularEditorService, @Inject(DOCUMENT) private document: any) {\n  }\n\n  ngOnInit() {\n    if (this.tagList ) {\n      this.tagList.subscribe(tags => {\n        tags.forEach(t => {\n          let group = this.tagGroups.find(g => g.name === t.group);\n          if (!group) {\n            group = {name: t.group, tags: []};\n            this.tagGroups.push(group);\n          }\n          group.tags.push(t);\n        });\n      });\n    }\n  }\n  /**\n   * Trigger command from editor header buttons\n   * @param command string from toolbar buttons\n   */\n  triggerCommand(command: string) {\n    this.execute.emit(command);\n  }\n\n  /**\n   * highlight editor buttons when cursor moved or positioning\n   */\n  triggerButtons() {\n    if (!this.showToolbar) {\n      return;\n    }\n    this.buttons.forEach(e => {\n      const result = this.document.queryCommandState(e);\n      const elementById = this.document.getElementById(e + '-' + this.id);\n      if (result) {\n        this.renderer.addClass(elementById, 'active');\n      } else {\n        this.renderer.removeClass(elementById, 'active');\n      }\n    });\n  }\n\n  /**\n   * trigger highlight editor buttons when cursor moved or positioning in block\n   */\n  triggerBlocks(nodes: Node[]) {\n    if (!this.showToolbar) {\n      return;\n    }\n    this.linkSelected = nodes.findIndex(x => x.nodeName === 'A') > -1;\n    let found = false;\n    this.select.forEach(y => {\n      const node = nodes.find(x => x.nodeName === y);\n      if (node !== undefined && y === node.nodeName) {\n        if (found === false) {\n          this.block = node.nodeName.toLowerCase();\n          found = true;\n        }\n      } else if (found === false) {\n        this.block = 'default';\n      }\n    });\n\n    found = false;\n    if (this.fonts) {\n      this.fonts.forEach((y, index) => {\n        const node = nodes.find(x => {\n          if (x instanceof HTMLFontElement) {\n            return x.face === y.name;\n          }\n        });\n        if (node !== undefined) {\n          if (found === false) {\n            this.fontId = index;\n            found = true;\n          }\n        } else if (found === false) {\n          this.fontId = this.defaultFontId;\n        }\n      });\n    }\n\n    found = false;\n    if (this.customClasses) {\n      this.customClasses.forEach((y, index) => {\n        const node = nodes.find(x => {\n          if (x instanceof Element) {\n            return x.className === y.class;\n          }\n        });\n        if (node !== undefined) {\n          if (found === false) {\n            this.customClassId = index;\n            found = true;\n          }\n        } else if (found === false) {\n          this.customClassId = -1;\n        }\n      });\n    }\n\n    Object.keys(this.tagMap).map(e => {\n      const elementById = this.document.getElementById(this.tagMap[e] + '-' + this.id);\n      const node = nodes.find(x => x.nodeName === e);\n      if (node !== undefined && e === node.nodeName) {\n        this.renderer.addClass(elementById, 'active');\n      } else {\n        this.renderer.removeClass(elementById, 'active');\n      }\n    });\n  }\n\n  /**\n   * insert URL link\n   */\n  insertUrl() {\n    const url = prompt('Insert URL link', `https://`);\n    if (url && url !== '' && url !== `https://`) {\n      this.editorService.createLink(url);\n    }\n  }\n\n  /**\n   * insert Vedio link\n   */\n  insertVideo() {\n    this.execute.emit('');\n    const url = prompt('Insert Video link', `https://`);\n    if (url && url !== '' && url !== `https://`) {\n      this.editorService.insertVideo(url);\n    }\n  }\n\n  /**\n   * insert Vedio link\n   */\n  insertTag() {\n    this.execute.emit('');\n    this.editorService.insertTag(this.currentTag);\n    this.currentTag = null;\n    this.execute.emit('');\n  }\n\n  /** insert color */\n  insertColor(color: string, where: string) {\n    this.editorService.insertColor(color, where);\n    this.execute.emit('');\n  }\n\n  /**\n   * set font Name/family\n   * @param fontId number\n   */\n  setFontName(fontId: number): void {\n    this.editorService.setFontName(this.fonts[fontId].name);\n    this.execute.emit('');\n  }\n\n  /**\n   * set font Size\n   * @param fontSize string\n   */\n  setFontSize(fontSize: string): void {\n    this.editorService.setFontSize(fontSize);\n    this.execute.emit('');\n  }\n\n  /**\n   * toggle editor mode (WYSIWYG or SOURCE)\n   * @param m boolean\n   */\n  setEditorMode(m: boolean) {\n    const toggleEditorModeButton = this.document.getElementById('toggleEditorMode' + '-' + this.id);\n    if (m) {\n      this.renderer.addClass(toggleEditorModeButton, 'active');\n    } else {\n      this.renderer.removeClass(toggleEditorModeButton, 'active');\n    }\n    this.htmlMode = m;\n  }\n\n  /**\n   * Upload image when file is selected\n   */\n  onFileChanged(event) {\n    const file = event.target.files[0];\n    if (file.type.includes('image/')) {\n      this.editorService.uploadImage(file).subscribe(e => {\n        if (e instanceof HttpResponse) {\n          this.execute.emit('');\n          this.editorService.insertImage(e.body.imageUrl);\n          this.fileReset();\n        }\n      });\n    }\n  }\n\n  /**\n   * Reset Input\n   */\n  fileReset() {\n    this.myInputFile.nativeElement.value = '';\n  }\n\n  /**\n   * Set custom class\n   */\n  setCustomClass(classId: number) {\n    this.editorService.createCustomClass(this.customClasses[classId]);\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {AngularEditorConfig, angularEditorConfig} from './config';\nimport {AngularEditorToolbarComponent} from './angular-editor-toolbar.component';\nimport {AngularEditorService} from './angular-editor.service';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n  selector: 'angular-editor',\n  templateUrl: './angular-editor.component.html',\n  styleUrls: ['./angular-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AngularEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class AngularEditorComponent implements OnInit, ControlValueAccessor, AfterContentInit {\n\n  private onChange: (value: string) => void;\n  private onTouched: () => void;\n\n  placeholder: boolean;\n\n  modeVisual = true;\n  showPlaceholder = false;\n  @Input() id = '';\n  @Input() config: AngularEditorConfig = angularEditorConfig;\n\n  @Output() html;\n\n  @ViewChild('editor') textArea: any;\n  @ViewChild('editorWrapper') editorWrapper: any;\n  @ViewChild('editorToolbar') editorToolbar: AngularEditorToolbarComponent;\n\n  @Output() viewMode = new EventEmitter<boolean>();\n\n  /** emits `blur` event when focused out from the textarea */\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\n\n  /** emits `focus` event when focused in to the textarea */\n  @Output() focus: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private _renderer: Renderer2, private editorService: AngularEditorService, @Inject(DOCUMENT) private _document: any) {\n  }\n\n  ngOnInit() {\n    this.editorToolbar.id = this.id;\n    this.editorToolbar.fonts = this.config.fonts ? this.config.fonts : angularEditorConfig.fonts;\n    this.editorToolbar.customClasses = this.config.customClasses;\n    this.editorToolbar.tagList = this.config.tagList;\n    this.editorService.uploadUrl = this.config.uploadUrl;\n    if (this.config.showToolbar !== undefined) {\n      this.editorToolbar.showToolbar = this.config.showToolbar;\n    }\n    if (this.config.defaultParagraphSeparator) {\n      this.editorService.setDefaultParagraphSeparator(this.config.defaultParagraphSeparator);\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.config.defaultFontName) {\n      this.editorToolbar.defaultFontId = this.config.defaultFontName ? this.editorToolbar.fonts.findIndex(x => {\n        return x.name === this.config.defaultFontName;\n      }) : 0;\n      this.editorToolbar.fontId = this.editorToolbar.defaultFontId;\n      this.onEditorFocus();\n      this.editorService.setFontName(this.config.defaultFontName);\n    } else {\n      this.editorToolbar.defaultFontId = 0;\n      this.editorToolbar.fontId = 0;\n    }\n    if (this.config.defaultFontSize) {\n      this.editorToolbar.fontSize = this.config.defaultFontSize;\n      this.onEditorFocus();\n      this.editorService.setFontSize(this.config.defaultFontSize);\n    }\n  }\n\n  /**\n   * Executed command from editor header buttons\n   * @param command string from triggerCommand\n   */\n  executeCommand(command: string) {\n    if (command === 'toggleEditorMode') {\n      this.toggleEditorMode(this.modeVisual);\n    } else if (command !== '') {\n      this.editorService.executeCommand(command);\n      this.exec();\n    }\n\n    this.onEditorFocus();\n  }\n\n  /**\n   * focus event\n   */\n  onTextAreaFocus(): void {\n    this.focus.emit('focus');\n  }\n\n  /**\n   * blur event\n   */\n  onTextAreaBlur(event: FocusEvent) {\n    /**\n     * save selection if focussed out\n     */\n    this.editorService.saveSelection();\n\n    if (typeof this.onTouched === 'function') {\n      this.onTouched();\n    }\n\n    if (event.relatedTarget != null && (event.relatedTarget as HTMLElement).parentElement.className !== 'angular-editor-toolbar-set') {\n      this.blur.emit('blur');\n    }\n  }\n\n  /**\n   *  focus the text area when the editor is focussed\n   */\n  onEditorFocus() {\n    this.textArea.nativeElement.focus();\n  }\n\n  /**\n   * Executed from the contenteditable section while the input property changes\n   * @param html html string from contenteditable\n   */\n  onContentChange(html: string): void {\n\n    if (typeof this.onChange === 'function') {\n      this.onChange(html);\n      if ((!html || html === '<br>' || html === '') !== this.showPlaceholder) {\n        this.togglePlaceholder(this.showPlaceholder);\n      }\n    }\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a change event.\n   *\n   * @param fn a function\n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a touch event.\n   *\n   * @param fn a function\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Write a new value to the element.\n   *\n   * @param value value to be executed when there is a change in contenteditable\n   */\n  writeValue(value: any): void {\n\n    if ((!value || value === '<br>' || value === '') !== this.showPlaceholder) {\n      this.togglePlaceholder(this.showPlaceholder);\n    }\n\n    if (value === null || value === undefined || value === '' || value === '<br>') {\n      value = null;\n    }\n\n    this.refreshView(value);\n  }\n\n  /**\n   * refresh view/HTML of the editor\n   *\n   * @param value html string from the editor\n   */\n  refreshView(value: string): void {\n    const normalizedValue = value === null ? '' : value;\n    this._renderer.setProperty(this.textArea.nativeElement, 'innerHTML', normalizedValue);\n\n    return;\n  }\n\n  /**\n   * toggles placeholder based on input string\n   *\n   * @param value A HTML string from the editor\n   */\n  togglePlaceholder(value: boolean): void {\n    if (!value) {\n      this._renderer.addClass(this.editorWrapper.nativeElement, 'show-placeholder');\n      this.showPlaceholder = true;\n\n    } else {\n      this._renderer.removeClass(this.editorWrapper.nativeElement, 'show-placeholder');\n      this.showPlaceholder = false;\n    }\n  }\n\n  /**\n   * Implements disabled state for this element\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    const div = this.textArea.nativeElement;\n    const action = isDisabled ? 'addClass' : 'removeClass';\n    this._renderer[action](div, 'disabled');\n  }\n\n  /**\n   * toggles editor mode based on bToSource bool\n   *\n   * @param bToSource A boolean value from the editor\n   */\n  toggleEditorMode(bToSource: boolean) {\n    let oContent: any;\n    const editableElement = this.textArea.nativeElement;\n\n    if (bToSource) {\n      oContent = this._document.createTextNode(editableElement.innerHTML);\n      editableElement.innerHTML = '';\n\n      const oPre = this._document.createElement('pre');\n      oPre.setAttribute('style', 'margin: 0; outline: none;');\n      const oCode = this._document.createElement('code');\n      editableElement.contentEditable = false;\n      oCode.id = 'sourceText';\n      oCode.setAttribute('style', 'white-space: pre-wrap; word-break: keep-all; margin: 0; outline: none; background-color: #fff5b9;');\n      oCode.contentEditable = 'true';\n      oCode.appendChild(oContent);\n      oPre.appendChild(oCode);\n      editableElement.appendChild(oPre);\n\n      this._document.execCommand('defaultParagraphSeparator', false, 'div');\n\n      this.modeVisual = false;\n      this.viewMode.emit(false);\n      oCode.focus();\n    } else {\n      if (this._document.all) {\n        editableElement.innerHTML = editableElement.innerText;\n      } else {\n        oContent = this._document.createRange();\n        oContent.selectNodeContents(editableElement.firstChild);\n        editableElement.innerHTML = oContent.toString();\n      }\n      editableElement.contentEditable = true;\n      this.modeVisual = true;\n      this.viewMode.emit(true);\n      this.onContentChange(editableElement.innerHTML);\n      editableElement.focus();\n    }\n    this.editorToolbar.setEditorMode(!this.modeVisual);\n  }\n\n  /**\n   * toggles editor buttons when cursor moved or positioning\n   *\n   * Send a node array from the contentEditable of the editor\n   */\n  exec() {\n    this.editorToolbar.triggerButtons();\n\n    let userSelection;\n    if (window.getSelection) {\n      userSelection = window.getSelection();\n    }\n\n    let a = userSelection.focusNode;\n    const els = [];\n    while (a && a.id !== 'editor') {\n      els.unshift(a);\n      a = a.parentNode;\n    }\n    this.editorToolbar.triggerBlocks(els);\n  }\n\n  onKeyDown(e: KeyboardEvent) {\n    if (e.code === 'Enter') {\n      this.editorService.insertHtml('<br><br>');\n      return false;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {AngularEditorComponent} from './angular-editor.component';\nimport {AngularEditorToolbarComponent} from \"./angular-editor-toolbar.component\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule\n  ],\n  declarations: [AngularEditorComponent, AngularEditorToolbarComponent],\n  exports: [AngularEditorComponent, AngularEditorToolbarComponent]\n})\nexport class AngularEditorModule {\n}\n"],"names":[],"mappings":"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"}
