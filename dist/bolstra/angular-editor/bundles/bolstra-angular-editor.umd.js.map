{"version":3,"file":"bolstra-angular-editor.umd.js.map","sources":["ng://@bolstra/angular-editor/lib/angular-editor.service.ts","ng://@bolstra/angular-editor/lib/config.ts","ng://@bolstra/angular-editor/lib/angular-editor.component.ts","ng://@bolstra/angular-editor/lib/angular-editor-toolbar.component.ts","ng://@bolstra/angular-editor/lib/angular-editor.module.ts"],"sourcesContent":["import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpEvent} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\nimport {CustomClass, Tag} from './config';\n\nexport interface UploadResponse {\n  imageUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularEditorService {\n\n  savedSelection: Range | null;\n  selectedText: string;\n  uploadUrl: string;\n\n\n  constructor(private http: HttpClient, @Inject(DOCUMENT) private document: any) {\n  }\n\n  /**\n   * Executed command from editor header buttons exclude toggleEditorMode\n   * @param command string from triggerCommand\n   */\n  executeCommand(command: string) {\n    const commands = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'pre'];\n    if (commands.includes(command)) {\n      this.document.execCommand('formatBlock', false, command);\n    }\n\n    this.document.execCommand(command, false, null);\n  }\n\n  /**\n   * Create URL link\n   * @param url string from UI prompt\n   */\n  createLink(url: string) {\n    if (!url.includes('http')) {\n      this.document.execCommand('createlink', false, url);\n    } else {\n      const newUrl = `<a href='${url}' target='_blank'>${this.selectedText}</a>`;\n      this.insertHtml(newUrl);\n    }\n  }\n\n  /**\n   * insert color either font or background\n   *\n   * @param color color to be inserted\n   * @param where where the color has to be inserted either text/background\n   */\n  insertColor(color: string, where: string): void {\n    const restored = this.restoreSelection();\n    if (restored) {\n      if (where === 'textColor') {\n        this.document.execCommand('foreColor', false, color);\n      } else {\n        this.document.execCommand('hiliteColor', false, color);\n      }\n    }\n  }\n\n  /**\n   * Set font name\n   * @param fontName string\n   */\n  setFontName(fontName: string) {\n    this.document.execCommand('fontName', false, fontName);\n  }\n\n  /**\n   * Set font size\n   * @param fontSize string\n   */\n  setFontSize(fontSize: string) {\n    this.document.execCommand('fontSize', false, fontSize);\n  }\n\n  /**\n   * Create raw HTML\n   * @param html HTML string\n   */\n  insertHtml(html: string): void {\n\n    const isHTMLInserted = this.document.execCommand('insertHTML', false, html);\n\n    if (!isHTMLInserted) {\n      throw new Error('Unable to perform the operation');\n    }\n  }\n\n  /**\n   * save selection when the editor is focussed out\n   */\n  saveSelection(): any {\n    if (window.getSelection) {\n      const sel = window.getSelection();\n      if (sel.getRangeAt && sel.rangeCount) {\n        this.savedSelection = sel.getRangeAt(0);\n        this.selectedText = sel.toString();\n      }\n    } else if (this.document.getSelection && this.document.createRange) {\n      this.savedSelection = document.createRange();\n    } else {\n      this.savedSelection = null;\n    }\n  }\n\n  /**\n   * restore selection when the editor is focussed in\n   *\n   * saved selection when the editor is focussed out\n   */\n  restoreSelection(): boolean {\n    if (this.savedSelection) {\n      if (window.getSelection) {\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(this.savedSelection);\n        return true;\n      } else if (this.document.getSelection /*&& this.savedSelection.select*/) {\n        // this.savedSelection.select();\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  /** check any slection is made or not */\n  private checkSelection(): any {\n\n    const slectedText = this.savedSelection.toString();\n\n    if (slectedText.length === 0) {\n      throw new Error('No Selection Made');\n    }\n\n    return true;\n  }\n\n  /**\n   * Upload file to uploadUrl\n   * @param file\n   */\n  uploadImage(file: File): Observable<HttpEvent<UploadResponse>> {\n\n    const uploadData: FormData = new FormData();\n\n    uploadData.append('file', file, file.name);\n    return this.http.post<UploadResponse>(this.uploadUrl, uploadData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n\n  /**\n   * Insert image with Url\n   * @param imageUrl\n   */\n  insertImage(imageUrl: string) {\n    this.document.execCommand('insertImage', false, imageUrl);\n  }\n\n  insertVideo(videoUrl: string) {\n    if (videoUrl.match('www.youtube.com')) {\n      this.insertYouTubeVideoTag(videoUrl);\n    }\n    if (videoUrl.match('vimeo.com')) {\n      this.insertVimeoVideoTag(videoUrl);\n    }\n  }\n\n  insertTag(tag: Tag) {\n    if (tag === null) {\n      return;\n    }\n    const tagS = `${tag.groupName} -> ${tag.name}`;\n    const size = tagS.length;\n    const tagHtml = `\n      <input id='bolstra.${tag.id}' value='${tagS}'\n        readonly size=${size}\n        style='background-color:lightgrey;\n        padding: 5px;\n        border-radius: 5px;\n        text-align: center;\n        border-left:5px solid red;\n        border-right:5px solid red;\n        border-top:0;\n        border-bottom:0;'\n        ></input>\n    `;\n    this.insertHtml(tagHtml);\n  }\n\n  setDefaultParagraphSeparator(separator: string) {\n    this.document.execCommand('defaultParagraphSeparator', false, separator);\n  }\n\n  createCustomClass(customClass: CustomClass) {\n    let newTag = this.selectedText;\n    if (customClass) {\n      const tagName = customClass.tag ? customClass.tag : 'span';\n      newTag = `<${tagName} class='${customClass.class}'>${this.selectedText}</${tagName}>`;\n    }\n    this.insertHtml(newTag);\n  }\n\n  private insertYouTubeVideoTag(videoUrl: string): void {\n    const id = videoUrl.split('v=')[1];\n    const imageUrl = `https://img.youtube.com/vi/${id}/0.jpg`;\n    const thumbnail = `\n      <div style='position: relative'>\n        <img style='position: absolute; left:200px; top:140px'\n             src=\"https://img.icons8.com/color/96/000000/youtube-play.png\"\n        <a href='${videoUrl}' target='_blank'>\n          <img src=\"${imageUrl}\" alt=\"click to watch\"/>\n        </a>\n      </div>`;\n    this.insertHtml(thumbnail);\n  }\n\n  private insertVimeoVideoTag(videoUrl: string): void {\n    const sub = this.http.get<any>(`https://vimeo.com/api/oembed.json?url=${videoUrl}`).subscribe(data => {\n      const imageUrl = data.thumbnail_url_with_play_button;\n      const thumbnail = `<div>\n        <a href='${videoUrl}' target='_blank'>\n          <img src=\"${imageUrl}\" alt=\"${data.title}\"/>\n        </a>\n      </div>`;\n      this.insertHtml(thumbnail);\n      sub.unsubscribe();\n    });\n  }\n}\n","export interface CustomClass {\n  name: string;\n  class: string;\n  tag?: string;\n}\n\nexport interface Font {\n  name: string;\n  class: string;\n}\nexport interface Tag {\n  id: string;\n  name: string;\n  groupName: string;\n}\n\nexport interface AngularEditorConfig {\n  editable?: boolean;\n  spellcheck?: boolean;\n  height?: 'auto' | string;\n  minHeight?: '0' | string;\n  maxHeight?: 'auto' | string;\n  width?: 'auto' | string;\n  minWidth?: '0' | string;\n  translate?: 'yes' | 'now' | string;\n  enableToolbar?: boolean;\n  showToolbar?: boolean;\n  placeholder?: string;\n  defaultParagraphSeparator?: string;\n  defaultFontName?: string;\n  defaultFontSize?: '1' | '2' | '3' | '4' | '5' | '6' | '7' |string;\n  uploadUrl?: string;\n  fonts?: Font[];\n  customClasses?: CustomClass[];\n  tagList?: Tag[];\n}\n\nexport const angularEditorConfig: AngularEditorConfig = {\n  editable: true,\n  spellcheck: true,\n  height: 'auto',\n  minHeight: '0',\n  maxHeight: 'auto',\n  width: 'auto',\n  minWidth: '0',\n  translate: 'yes',\n  enableToolbar: true,\n  showToolbar: true,\n  placeholder: 'Enter text here...',\n  defaultParagraphSeparator: '',\n  defaultFontName: '',\n  defaultFontSize: '',\n  fonts: [\n    {class: 'arial', name: 'Arial'},\n    {class: 'times-new-roman', name: 'Times New Roman'},\n  ],\n  uploadUrl: 'v1/image'\n};\n","import {\n  AfterContentInit,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {AngularEditorConfig, angularEditorConfig} from './config';\nimport {AngularEditorToolbarComponent} from './angular-editor-toolbar.component';\nimport {AngularEditorService} from './angular-editor.service';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n  selector: 'angular-editor',\n  templateUrl: './angular-editor.component.html',\n  styleUrls: ['./angular-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AngularEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class AngularEditorComponent implements OnInit, ControlValueAccessor, AfterContentInit {\n\n  private onChange: (value: string) => void;\n  private onTouched: () => void;\n\n  placeholder: boolean;\n\n  modeVisual = true;\n  showPlaceholder = false;\n  @Input() id = '';\n  @Input() config: AngularEditorConfig = angularEditorConfig;\n  \n  @Output() html;\n\n  @ViewChild('editor') textArea: any;\n  @ViewChild('editorWrapper') editorWrapper: any;\n  @ViewChild('editorToolbar') editorToolbar: AngularEditorToolbarComponent;\n\n  @Output() viewMode = new EventEmitter<boolean>();\n\n  /** emits `blur` event when focused out from the textarea */\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\n\n  /** emits `focus` event when focused in to the textarea */\n  @Output() focus: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private _renderer: Renderer2, private editorService: AngularEditorService, @Inject(DOCUMENT) private _document: any) {\n  }\n\n  ngOnInit() {\n    this.editorToolbar.id = this.id;\n    this.editorToolbar.fonts = this.config.fonts ? this.config.fonts : angularEditorConfig.fonts;\n    this.editorToolbar.customClasses = this.config.customClasses;\n    this.editorService.uploadUrl = this.config.uploadUrl;\n    if (this.config.showToolbar !== undefined) {\n      this.editorToolbar.showToolbar = this.config.showToolbar;\n    }\n    if (this.config.defaultParagraphSeparator) {\n      this.editorService.setDefaultParagraphSeparator(this.config.defaultParagraphSeparator);\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.config.defaultFontName) {\n      this.editorToolbar.defaultFontId = this.config.defaultFontName ? this.editorToolbar.fonts.findIndex(x => {\n        return x.name === this.config.defaultFontName;\n      }) : 0;\n      this.editorToolbar.fontId = this.editorToolbar.defaultFontId;\n      this.onEditorFocus();\n      this.editorService.setFontName(this.config.defaultFontName);\n    } else {\n      this.editorToolbar.defaultFontId = 0;\n      this.editorToolbar.fontId = 0;\n    }\n    if (this.config.defaultFontSize) {\n      this.editorToolbar.fontSize = this.config.defaultFontSize;\n      this.onEditorFocus();\n      this.editorService.setFontSize(this.config.defaultFontSize);\n    }\n  }\n\n  /**\n   * Executed command from editor header buttons\n   * @param command string from triggerCommand\n   */\n  executeCommand(command: string) {\n    if (command === 'toggleEditorMode') {\n      this.toggleEditorMode(this.modeVisual);\n    } else if (command !== '') {\n      this.editorService.executeCommand(command);\n      this.exec();\n    }\n\n    this.onEditorFocus();\n  }\n\n  /**\n   * focus event\n   */\n  onTextAreaFocus(): void {\n    this.focus.emit('focus');\n  }\n\n  /**\n   * blur event\n   */\n  onTextAreaBlur(event: FocusEvent) {\n    /**\n     * save selection if focussed out\n     */\n    this.editorService.saveSelection();\n\n    if (typeof this.onTouched === 'function') {\n      this.onTouched();\n    }\n\n    if (event.relatedTarget != null && (event.relatedTarget as HTMLElement).parentElement.className !== 'angular-editor-toolbar-set') {\n      this.blur.emit('blur');\n    }\n  }\n\n  /**\n   *  focus the text area when the editor is focussed\n   */\n  onEditorFocus() {\n    this.textArea.nativeElement.focus();\n  }\n\n  /**\n   * Executed from the contenteditable section while the input property changes\n   * @param html html string from contenteditable\n   */\n  onContentChange(html: string): void {\n\n    if (typeof this.onChange === 'function') {\n      this.onChange(html);\n      if ((!html || html === '<br>' || html === '') !== this.showPlaceholder) {\n        this.togglePlaceholder(this.showPlaceholder);\n      }\n    }\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a change event.\n   *\n   * @param fn a function\n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a touch event.\n   *\n   * @param fn a function\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Write a new value to the element.\n   *\n   * @param value value to be executed when there is a change in contenteditable\n   */\n  writeValue(value: any): void {\n\n    if ((!value || value === '<br>' || value === '') !== this.showPlaceholder) {\n      this.togglePlaceholder(this.showPlaceholder);\n    }\n\n    if (value === null || value === undefined || value === '' || value === '<br>') {\n      value = null;\n    }\n\n    this.refreshView(value);\n  }\n\n  /**\n   * refresh view/HTML of the editor\n   *\n   * @param value html string from the editor\n   */\n  refreshView(value: string): void {\n    const normalizedValue = value === null ? '' : value;\n    this._renderer.setProperty(this.textArea.nativeElement, 'innerHTML', normalizedValue);\n\n    return;\n  }\n\n  /**\n   * toggles placeholder based on input string\n   *\n   * @param value A HTML string from the editor\n   */\n  togglePlaceholder(value: boolean): void {\n    if (!value) {\n      this._renderer.addClass(this.editorWrapper.nativeElement, 'show-placeholder');\n      this.showPlaceholder = true;\n\n    } else {\n      this._renderer.removeClass(this.editorWrapper.nativeElement, 'show-placeholder');\n      this.showPlaceholder = false;\n    }\n  }\n\n  /**\n   * Implements disabled state for this element\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    const div = this.textArea.nativeElement;\n    const action = isDisabled ? 'addClass' : 'removeClass';\n    this._renderer[action](div, 'disabled');\n  }\n\n  /**\n   * toggles editor mode based on bToSource bool\n   *\n   * @param bToSource A boolean value from the editor\n   */\n  toggleEditorMode(bToSource: boolean) {\n    let oContent: any;\n    const editableElement = this.textArea.nativeElement;\n\n    if (bToSource) {\n      oContent = this._document.createTextNode(editableElement.innerHTML);\n      editableElement.innerHTML = '';\n\n      const oPre = this._document.createElement('pre');\n      oPre.setAttribute('style', 'margin: 0; outline: none;');\n      const oCode = this._document.createElement('code');\n      editableElement.contentEditable = false;\n      oCode.id = 'sourceText';\n      oCode.setAttribute('style', 'white-space: pre-wrap; word-break: keep-all; margin: 0; outline: none; background-color: #fff5b9;');\n      oCode.contentEditable = 'true';\n      oCode.appendChild(oContent);\n      oPre.appendChild(oCode);\n      editableElement.appendChild(oPre);\n\n      this._document.execCommand('defaultParagraphSeparator', false, 'div');\n\n      this.modeVisual = false;\n      this.viewMode.emit(false);\n      oCode.focus();\n    } else {\n      if (this._document.all) {\n        editableElement.innerHTML = editableElement.innerText;\n      } else {\n        oContent = this._document.createRange();\n        oContent.selectNodeContents(editableElement.firstChild);\n        editableElement.innerHTML = oContent.toString();\n      }\n      editableElement.contentEditable = true;\n      this.modeVisual = true;\n      this.viewMode.emit(true);\n      this.onContentChange(editableElement.innerHTML);\n      editableElement.focus();\n    }\n    this.editorToolbar.setEditorMode(!this.modeVisual);\n  }\n\n  /**\n   * toggles editor buttons when cursor moved or positioning\n   *\n   * Send a node array from the contentEditable of the editor\n   */\n  exec() {\n    this.editorToolbar.triggerButtons();\n\n    let userSelection;\n    if (window.getSelection) {\n      userSelection = window.getSelection();\n    }\n\n    let a = userSelection.focusNode;\n    const els = [];\n    while (a && a.id !== 'editor') {\n      els.unshift(a);\n      a = a.parentNode;\n    }\n    this.editorToolbar.triggerBlocks(els);\n  }\n\n  onKeyDown(e: KeyboardEvent) {\n    if (e.code === 'Enter') {\n      this.editorService.insertHtml('<br><br>');\n      return false;\n    }\n  }\n}\n","import {Component, OnInit, ElementRef, EventEmitter, Inject, Input, Output, Renderer2, ViewChild} from '@angular/core';\nimport {AngularEditorService} from './angular-editor.service';\nimport {HttpResponse} from '@angular/common/http';\nimport {DOCUMENT} from '@angular/common';\nimport {CustomClass, Font, Tag} from './config';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'angular-editor-toolbar',\n  templateUrl: './angular-editor-toolbar.component.html',\n  styleUrls: ['./angular-editor-toolbar.component.scss']\n})\n\nexport class AngularEditorToolbarComponent implements OnInit {\n  id = '';\n  htmlMode = false;\n  showToolbar = true;\n  linkSelected = false;\n  block = 'default';\n  defaultFontId;\n  fontId = 0;\n  fontSize = '5';\n  fonts: Font[];\n\n  customClassId = -1;\n  customClasses: CustomClass[];\n  currentTag: Tag = null;\n  tagGroups: any[] = [];\n\n  tagMap = {\n    BLOCKQUOTE: 'indent',\n    A: 'link'\n  };\n\n  select = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'P', 'PRE', 'DIV'];\n\n  buttons = ['bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', 'justifyLeft', 'justifyCenter',\n    'justifyRight', 'justifyFull', 'indent', 'outdent', 'insertUnorderedList', 'insertOrderedList', 'link'];\n\n  @Input() tagList: Tag[];\n\n  @Output() execute: EventEmitter<string> = new EventEmitter<string>();\n\n  @ViewChild('fileInput') myInputFile: ElementRef;\n\n\n  constructor(private renderer: Renderer2,\n              private editorService: AngularEditorService, @Inject(DOCUMENT) private document: any) {\n  }\n\n  ngOnInit() {\n    if (this.tagList && this.tagList.length > 0) {\n      this.tagList.forEach ( t => {\n        let group = this.tagGroups.find(g => g.name === t.groupName);\n        if (!group) {\n          group = {name: t.groupName, tags: []};\n          this.tagGroups.push(group);\n        }\n        group.tags.push(t);\n      });\n    }\n  }\n  /**\n   * Trigger command from editor header buttons\n   * @param command string from toolbar buttons\n   */\n  triggerCommand(command: string) {\n    this.execute.emit(command);\n  }\n\n  /**\n   * highlight editor buttons when cursor moved or positioning\n   */\n  triggerButtons() {\n    if (!this.showToolbar) {\n      return;\n    }\n    this.buttons.forEach(e => {\n      const result = this.document.queryCommandState(e);\n      const elementById = this.document.getElementById(e + '-' + this.id);\n      if (result) {\n        this.renderer.addClass(elementById, 'active');\n      } else {\n        this.renderer.removeClass(elementById, 'active');\n      }\n    });\n  }\n\n  /**\n   * trigger highlight editor buttons when cursor moved or positioning in block\n   */\n  triggerBlocks(nodes: Node[]) {\n    if (!this.showToolbar) {\n      return;\n    }\n    this.linkSelected = nodes.findIndex(x => x.nodeName === 'A') > -1;\n    let found = false;\n    this.select.forEach(y => {\n      const node = nodes.find(x => x.nodeName === y);\n      if (node !== undefined && y === node.nodeName) {\n        if (found === false) {\n          this.block = node.nodeName.toLowerCase();\n          found = true;\n        }\n      } else if (found === false) {\n        this.block = 'default';\n      }\n    });\n\n    found = false;\n    if (this.fonts) {\n      this.fonts.forEach((y, index) => {\n        const node = nodes.find(x => {\n          if (x instanceof HTMLFontElement) {\n            return x.face === y.name;\n          }\n        });\n        if (node !== undefined) {\n          if (found === false) {\n            this.fontId = index;\n            found = true;\n          }\n        } else if (found === false) {\n          this.fontId = this.defaultFontId;\n        }\n      });\n    }\n\n    found = false;\n    if (this.customClasses) {\n      this.customClasses.forEach((y, index) => {\n        const node = nodes.find(x => {\n          if (x instanceof Element) {\n            return x.className === y.class;\n          }\n        });\n        if (node !== undefined) {\n          if (found === false) {\n            this.customClassId = index;\n            found = true;\n          }\n        } else if (found === false) {\n          this.customClassId = -1;\n        }\n      });\n    }\n\n    Object.keys(this.tagMap).map(e => {\n      const elementById = this.document.getElementById(this.tagMap[e] + '-' + this.id);\n      const node = nodes.find(x => x.nodeName === e);\n      if (node !== undefined && e === node.nodeName) {\n        this.renderer.addClass(elementById, 'active');\n      } else {\n        this.renderer.removeClass(elementById, 'active');\n      }\n    });\n  }\n\n  /**\n   * insert URL link\n   */\n  insertUrl() {\n    const url = prompt('Insert URL link', `https://`);\n    if (url && url !== '' && url !== `https://`) {\n      this.editorService.createLink(url);\n    }\n  }\n\n  /**\n   * insert Vedio link\n   */\n  insertVideo() {\n    this.execute.emit('');\n    const url = prompt('Insert Video link', `https://`);\n    if (url && url !== '' && url !== `https://`) {\n      this.editorService.insertVideo(url);\n    }\n  }\n\n  /**\n   * insert Vedio link\n   */\n  insertTag() {\n    this.execute.emit('');\n    this.editorService.insertTag(this.currentTag);\n    this.currentTag = null;\n    this.execute.emit('');\n  }\n\n  /** insert color */\n  insertColor(color: string, where: string) {\n    this.editorService.insertColor(color, where);\n    this.execute.emit('');\n  }\n\n  /**\n   * set font Name/family\n   * @param fontId number\n   */\n  setFontName(fontId: number): void {\n    this.editorService.setFontName(this.fonts[fontId].name);\n    this.execute.emit('');\n  }\n\n  /**\n   * set font Size\n   * @param fontSize string\n   */\n  setFontSize(fontSize: string): void {\n    this.editorService.setFontSize(fontSize);\n    this.execute.emit('');\n  }\n\n  /**\n   * toggle editor mode (WYSIWYG or SOURCE)\n   * @param m boolean\n   */\n  setEditorMode(m: boolean) {\n    const toggleEditorModeButton = this.document.getElementById('toggleEditorMode' + '-' + this.id);\n    if (m) {\n      this.renderer.addClass(toggleEditorModeButton, 'active');\n    } else {\n      this.renderer.removeClass(toggleEditorModeButton, 'active');\n    }\n    this.htmlMode = m;\n  }\n\n  /**\n   * Upload image when file is selected\n   */\n  onFileChanged(event) {\n    const file = event.target.files[0];\n    if (file.type.includes('image/')) {\n      this.editorService.uploadImage(file).subscribe(e => {\n        if (e instanceof HttpResponse) {\n          this.execute.emit('');\n          this.editorService.insertImage(e.body.imageUrl);\n          this.fileReset();\n        }\n      });\n    }\n  }\n\n  /**\n   * Reset Input\n   */\n  fileReset() {\n    this.myInputFile.nativeElement.value = '';\n  }\n\n  /**\n   * Set custom class\n   */\n  setCustomClass(classId: number) {\n    this.editorService.createCustomClass(this.customClasses[classId]);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {AngularEditorComponent} from './angular-editor.component';\nimport {AngularEditorToolbarComponent} from \"./angular-editor-toolbar.component\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule\n  ],\n  declarations: [AngularEditorComponent, AngularEditorToolbarComponent],\n  exports: [AngularEditorComponent, AngularEditorToolbarComponent]\n})\nexport class AngularEditorModule {\n}\n"],"names":["Injectable","HttpClient","Inject","DOCUMENT","EventEmitter","Component","NG_VALUE_ACCESSOR","forwardRef","Renderer2","Input","Output","ViewChild","HttpResponse","NgModule","CommonModule","FormsModule","ReactiveFormsModule"],"mappings":";;;;;;;;;;AAAA;QAoBE,8BAAoB,IAAgB,EAA4B,QAAa;YAAzD,SAAI,GAAJ,IAAI,CAAY;YAA4B,aAAQ,GAAR,QAAQ,CAAK;SAC5E;;;;;;;;;;QAMD,6CAAc;;;;;YAAd,UAAe,OAAe;;oBACtB,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC;gBACjE,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAC9B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;iBAC1D;gBAED,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aACjD;;;;;;;;;;QAMD,yCAAU;;;;;YAAV,UAAW,GAAW;gBACpB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;iBACrD;qBAAM;;wBACC,MAAM,GAAG,cAAY,GAAG,0BAAqB,IAAI,CAAC,YAAY,SAAM;oBAC1E,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;iBACzB;aACF;;;;;;;;;;;;;;QAQD,0CAAW;;;;;;;YAAX,UAAY,KAAa,EAAE,KAAa;;oBAChC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE;gBACxC,IAAI,QAAQ,EAAE;oBACZ,IAAI,KAAK,KAAK,WAAW,EAAE;wBACzB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;qBACtD;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;qBACxD;iBACF;aACF;;;;;;;;;;QAMD,0CAAW;;;;;YAAX,UAAY,QAAgB;gBAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;aACxD;;;;;;;;;;QAMD,0CAAW;;;;;YAAX,UAAY,QAAgB;gBAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;aACxD;;;;;;;;;;QAMD,yCAAU;;;;;YAAV,UAAW,IAAY;;oBAEf,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC;gBAE3E,IAAI,CAAC,cAAc,EAAE;oBACnB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;iBACpD;aACF;;;;;;;;QAKD,4CAAa;;;;YAAb;gBACE,IAAI,MAAM,CAAC,YAAY,EAAE;;wBACjB,GAAG,GAAG,MAAM,CAAC,YAAY,EAAE;oBACjC,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,UAAU,EAAE;wBACpC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBACxC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;qBACpC;iBACF;qBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;oBAClE,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;iBAC9C;qBAAM;oBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;aACF;;;;;;;;;;;;QAOD,+CAAgB;;;;;;YAAhB;gBACE,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,IAAI,MAAM,CAAC,YAAY,EAAE;;4BACjB,GAAG,GAAG,MAAM,CAAC,YAAY,EAAE;wBACjC,GAAG,CAAC,eAAe,EAAE,CAAC;wBACtB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAClC,OAAO,IAAI,CAAC;qBACb;yBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,oCAAoC;;wBAEvE,OAAO,IAAI,CAAC;qBACb;iBACF;qBAAM;oBACL,OAAO,KAAK,CAAC;iBACd;aACF;;;;;;;QAGO,6CAAc;;;;;YAAtB;;oBAEQ,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;gBAElD,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC5B,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;iBACtC;gBAED,OAAO,IAAI,CAAC;aACb;;;;;;;;;;QAMD,0CAAW;;;;;YAAX,UAAY,IAAU;;oBAEd,UAAU,GAAa,IAAI,QAAQ,EAAE;gBAE3C,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE;oBAChE,cAAc,EAAE,IAAI;oBACpB,OAAO,EAAE,QAAQ;iBAClB,CAAC,CAAC;aACJ;;;;;;;;;;QAMD,0CAAW;;;;;YAAX,UAAY,QAAgB;gBAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;aAC3D;;;;;QAED,0CAAW;;;;YAAX,UAAY,QAAgB;gBAC1B,IAAI,QAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE;oBACrC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;iBACtC;gBACD,IAAI,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;oBAC/B,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;iBACpC;aACF;;;;;QAED,wCAAS;;;;YAAT,UAAU,GAAQ;gBAChB,IAAI,GAAG,KAAK,IAAI,EAAE;oBAChB,OAAO;iBACR;;oBACK,IAAI,GAAM,GAAG,CAAC,SAAS,YAAO,GAAG,CAAC,IAAM;;oBACxC,IAAI,GAAG,IAAI,CAAC,MAAM;;oBAClB,OAAO,GAAG,gCACO,GAAG,CAAC,EAAE,iBAAY,IAAI,iCACzB,IAAI,sRAUvB;gBACD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAC1B;;;;;QAED,2DAA4B;;;;YAA5B,UAA6B,SAAiB;gBAC5C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,2BAA2B,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;aAC1E;;;;;QAED,gDAAiB;;;;YAAjB,UAAkB,WAAwB;;oBACpC,MAAM,GAAG,IAAI,CAAC,YAAY;gBAC9B,IAAI,WAAW,EAAE;;wBACT,OAAO,GAAG,WAAW,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,GAAG,MAAM;oBAC1D,MAAM,GAAG,MAAI,OAAO,gBAAW,WAAW,CAAC,KAAK,UAAK,IAAI,CAAC,YAAY,UAAK,OAAO,MAAG,CAAC;iBACvF;gBACD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aACzB;;;;;;QAEO,oDAAqB;;;;;YAA7B,UAA8B,QAAgB;;oBACtC,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;oBAC5B,QAAQ,GAAG,gCAA8B,EAAE,WAAQ;;oBACnD,SAAS,GAAG,8MAIH,QAAQ,iDACL,QAAQ,4DAEjB;gBACT,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aAC5B;;;;;;QAEO,kDAAmB;;;;;YAA3B,UAA4B,QAAgB;gBAA5C,iBAWC;;oBAVO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,2CAAyC,QAAU,CAAC,CAAC,SAAS;;;mBAAC,UAAA,IAAI;;wBAC1F,QAAQ,GAAG,IAAI,CAAC,8BAA8B;;wBAC9C,SAAS,GAAG,6BACL,QAAQ,iDACL,QAAQ,iBAAU,IAAI,CAAC,KAAK,qCAErC;oBACP,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;oBAC3B,GAAG,CAAC,WAAW,EAAE,CAAC;iBACnB,EAAC;aACH;;oBAnOFA,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;wBAXOC,aAAU;wDAmBuBC,SAAM,SAACC,WAAQ;;;;mCApBxD;KAUA;;;;;;;AC2BA,QAAa,mBAAmB,GAAwB;QACtD,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,IAAI;QAChB,MAAM,EAAE,MAAM;QACd,SAAS,EAAE,GAAG;QACd,SAAS,EAAE,MAAM;QACjB,KAAK,EAAE,MAAM;QACb,QAAQ,EAAE,GAAG;QACb,SAAS,EAAE,KAAK;QAChB,aAAa,EAAE,IAAI;QACnB,WAAW,EAAE,IAAI;QACjB,WAAW,EAAE,oBAAoB;QACjC,yBAAyB,EAAE,EAAE;QAC7B,eAAe,EAAE,EAAE;QACnB,eAAe,EAAE,EAAE;QACnB,KAAK,EAAE;YACL,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAC;YAC/B,EAAC,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAC;SACpD;QACD,SAAS,EAAE,UAAU;KACtB;;;;;;ACzDD;QAwDE,gCAAoB,SAAoB,EAAU,aAAmC,EAA4B,SAAc;YAA3G,cAAS,GAAT,SAAS,CAAW;YAAU,kBAAa,GAAb,aAAa,CAAsB;YAA4B,cAAS,GAAT,SAAS,CAAK;YAnB/H,eAAU,GAAG,IAAI,CAAC;YAClB,oBAAe,GAAG,KAAK,CAAC;YACf,OAAE,GAAG,EAAE,CAAC;YACR,WAAM,GAAwB,mBAAmB,CAAC;YAQjD,aAAQ,GAAG,IAAIC,eAAY,EAAW,CAAC;;;;YAGvC,SAAI,GAAyB,IAAIA,eAAY,EAAU,CAAC;;;;YAGxD,UAAK,GAAyB,IAAIA,eAAY,EAAU,CAAC;SAGlE;;;;QAED,yCAAQ;;;YAAR;gBACE,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,mBAAmB,CAAC,KAAK,CAAC;gBAC7F,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC7D,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;gBACrD,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,SAAS,EAAE;oBACzC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;iBAC1D;gBACD,IAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,EAAE;oBACzC,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;iBACxF;aACF;;;;QAED,mDAAkB;;;YAAlB;gBAAA,iBAiBC;gBAhBC,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;oBAC/B,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS;;;uBAAC,UAAA,CAAC;wBACnG,OAAO,CAAC,CAAC,IAAI,KAAK,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC;qBAC/C,EAAC,GAAG,CAAC,CAAC;oBACP,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;oBAC7D,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;iBAC7D;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,CAAC,CAAC;oBACrC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC/B;gBACD,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;oBAC/B,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;oBAC1D,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;iBAC7D;aACF;;;;;;;;;;QAMD,+CAAc;;;;;YAAd,UAAe,OAAe;gBAC5B,IAAI,OAAO,KAAK,kBAAkB,EAAE;oBAClC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACxC;qBAAM,IAAI,OAAO,KAAK,EAAE,EAAE;oBACzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,CAAC,IAAI,EAAE,CAAC;iBACb;gBAED,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;;;;;;;;QAKD,gDAAe;;;;YAAf;gBACE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1B;;;;;;;;;QAKD,+CAAc;;;;;YAAd,UAAe,KAAiB;;;;gBAI9B,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;gBAEnC,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;oBACxC,IAAI,CAAC,SAAS,EAAE,CAAC;iBAClB;gBAED,IAAI,KAAK,CAAC,aAAa,IAAI,IAAI,IAAI,oBAAC,KAAK,CAAC,aAAa,IAAiB,aAAa,CAAC,SAAS,KAAK,4BAA4B,EAAE;oBAChI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACxB;aACF;;;;;;;;QAKD,8CAAa;;;;YAAb;gBACE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACrC;;;;;;;;;;QAMD,gDAAe;;;;;YAAf,UAAgB,IAAY;gBAE1B,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;oBACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACpB,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,MAAM,IAAI,CAAC,eAAe,EAAE;wBACtE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;qBAC9C;iBACF;aACF;;;;;;;;;;;;;;QAQD,iDAAgB;;;;;;;YAAhB,UAAiB,EAAO;gBACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACpB;;;;;;;;;;;;;;QAQD,kDAAiB;;;;;;;YAAjB,UAAkB,EAAO;gBACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACrB;;;;;;;;;;;;QAOD,2CAAU;;;;;;YAAV,UAAW,KAAU;gBAEnB,IAAI,CAAC,CAAC,KAAK,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,EAAE,MAAM,IAAI,CAAC,eAAe,EAAE;oBACzE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBAC9C;gBAED,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,MAAM,EAAE;oBAC7E,KAAK,GAAG,IAAI,CAAC;iBACd;gBAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACzB;;;;;;;;;;;;QAOD,4CAAW;;;;;;YAAX,UAAY,KAAa;;oBACjB,eAAe,GAAG,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK;gBACnD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;gBAEtF,OAAO;aACR;;;;;;;;;;;;QAOD,kDAAiB;;;;;;YAAjB,UAAkB,KAAc;gBAC9B,IAAI,CAAC,KAAK,EAAE;oBACV,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;oBAC9E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;iBAE7B;qBAAM;oBACL,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;oBACjF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAC9B;aACF;;;;;;;;;;;;QAOD,iDAAgB;;;;;;YAAhB,UAAiB,UAAmB;;oBAC5B,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa;;oBACjC,MAAM,GAAG,UAAU,GAAG,UAAU,GAAG,aAAa;gBACtD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;aACzC;;;;;;;;;;;;QAOD,iDAAgB;;;;;;YAAhB,UAAiB,SAAkB;;oBAC7B,QAAa;;oBACX,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa;gBAEnD,IAAI,SAAS,EAAE;oBACb,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;oBACpE,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;;wBAEzB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC;oBAChD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,2BAA2B,CAAC,CAAC;;wBAClD,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC;oBAClD,eAAe,CAAC,eAAe,GAAG,KAAK,CAAC;oBACxC,KAAK,CAAC,EAAE,GAAG,YAAY,CAAC;oBACxB,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,mGAAmG,CAAC,CAAC;oBACjI,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC;oBAC/B,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBAC5B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBACxB,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBAElC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,2BAA2B,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBAEtE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,KAAK,CAAC,KAAK,EAAE,CAAC;iBACf;qBAAM;oBACL,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;wBACtB,eAAe,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;qBACvD;yBAAM;wBACL,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;wBACxC,QAAQ,CAAC,kBAAkB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;wBACxD,eAAe,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACjD;oBACD,eAAe,CAAC,eAAe,GAAG,IAAI,CAAC;oBACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACzB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;oBAChD,eAAe,CAAC,KAAK,EAAE,CAAC;iBACzB;gBACD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACpD;;;;;;;;;;;;QAOD,qCAAI;;;;;;YAAJ;gBACE,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;;oBAEhC,aAAa;gBACjB,IAAI,MAAM,CAAC,YAAY,EAAE;oBACvB,aAAa,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;iBACvC;;oBAEG,CAAC,GAAG,aAAa,CAAC,SAAS;;oBACzB,GAAG,GAAG,EAAE;gBACd,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;oBAC7B,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACf,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC;iBAClB;gBACD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aACvC;;;;;QAED,0CAAS;;;;YAAT,UAAU,CAAgB;gBACxB,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;oBACtB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;oBAC1C,OAAO,KAAK,CAAC;iBACd;aACF;;oBA5RFC,YAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,4+BAA8C;wBAE9C,SAAS,EAAE;4BACT;gCACE,OAAO,EAAEC,uBAAiB;gCAC1B,WAAW,EAAEC,aAAU;;mCAAC,cAAM,OAAA,sBAAsB,GAAA,EAAC;gCACrD,KAAK,EAAE,IAAI;6BACZ;yBACF;;qBACF;;;;;wBApBCC,YAAS;wBAMH,oBAAoB;wDAyC8DN,SAAM,SAACC,WAAQ;;;;yBAjBtGM,QAAK;6BACLA,QAAK;2BAELC,SAAM;+BAENC,YAAS,SAAC,QAAQ;oCAClBA,YAAS,SAAC,eAAe;oCACzBA,YAAS,SAAC,eAAe;+BAEzBD,SAAM;2BAGNA,SAAM;4BAGNA,SAAM;;QAyPT,6BAAC;KA7RD;;;;;;AClBA;QA8CE,uCAAoB,QAAmB,EACnB,aAAmC,EAA4B,QAAa;YAD5E,aAAQ,GAAR,QAAQ,CAAW;YACnB,kBAAa,GAAb,aAAa,CAAsB;YAA4B,aAAQ,GAAR,QAAQ,CAAK;YAjChG,OAAE,GAAG,EAAE,CAAC;YACR,aAAQ,GAAG,KAAK,CAAC;YACjB,gBAAW,GAAG,IAAI,CAAC;YACnB,iBAAY,GAAG,KAAK,CAAC;YACrB,UAAK,GAAG,SAAS,CAAC;YAElB,WAAM,GAAG,CAAC,CAAC;YACX,aAAQ,GAAG,GAAG,CAAC;YAGf,kBAAa,GAAG,CAAC,CAAC,CAAC;YAEnB,eAAU,GAAQ,IAAI,CAAC;YACvB,cAAS,GAAU,EAAE,CAAC;YAEtB,WAAM,GAAG;gBACP,UAAU,EAAE,QAAQ;gBACpB,CAAC,EAAE,MAAM;aACV,CAAC;YAEF,WAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAEjE,YAAO,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe;gBACnH,cAAc,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,MAAM,CAAC,CAAC;YAIhG,YAAO,GAAyB,IAAIN,eAAY,EAAU,CAAC;SAOpE;;;;QAED,gDAAQ;;;YAAR;gBAAA,iBAWC;gBAVC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3C,IAAI,CAAC,OAAO,CAAC,OAAO;;;uBAAG,UAAA,CAAC;;4BAClB,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI;;;2BAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,SAAS,GAAA,EAAC;wBAC5D,IAAI,CAAC,KAAK,EAAE;4BACV,KAAK,GAAG,EAAC,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;4BACtC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBAC5B;wBACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBACpB,EAAC,CAAC;iBACJ;aACF;;;;;;;;;;QAKD,sDAAc;;;;;YAAd,UAAe,OAAe;gBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5B;;;;;;;;QAKD,sDAAc;;;;YAAd;gBAAA,iBAaC;gBAZC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,OAAO,CAAC,OAAO;;;mBAAC,UAAA,CAAC;;wBACd,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;;wBAC3C,WAAW,GAAG,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,GAAG,GAAG,GAAG,KAAI,CAAC,EAAE,CAAC;oBACnE,IAAI,MAAM,EAAE;wBACV,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;qBAC/C;yBAAM;wBACL,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;qBAClD;iBACF,EAAC,CAAC;aACJ;;;;;;;;;QAKD,qDAAa;;;;;YAAb,UAAc,KAAa;gBAA3B,iBAiEC;gBAhEC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,SAAS;;;mBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,KAAK,GAAG,GAAA,EAAC,GAAG,CAAC,CAAC,CAAC;;oBAC9D,KAAK,GAAG,KAAK;gBACjB,IAAI,CAAC,MAAM,CAAC,OAAO;;;mBAAC,UAAA,CAAC;;wBACb,IAAI,GAAG,KAAK,CAAC,IAAI;;;uBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,KAAK,CAAC,GAAA,EAAC;oBAC9C,IAAI,IAAI,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,EAAE;wBAC7C,IAAI,KAAK,KAAK,KAAK,EAAE;4BACnB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;4BACzC,KAAK,GAAG,IAAI,CAAC;yBACd;qBACF;yBAAM,IAAI,KAAK,KAAK,KAAK,EAAE;wBAC1B,KAAI,CAAC,KAAK,GAAG,SAAS,CAAC;qBACxB;iBACF,EAAC,CAAC;gBAEH,KAAK,GAAG,KAAK,CAAC;gBACd,IAAI,IAAI,CAAC,KAAK,EAAE;oBACd,IAAI,CAAC,KAAK,CAAC,OAAO;;;;uBAAC,UAAC,CAAC,EAAE,KAAK;;4BACpB,IAAI,GAAG,KAAK,CAAC,IAAI;;;2BAAC,UAAA,CAAC;4BACvB,IAAI,CAAC,YAAY,eAAe,EAAE;gCAChC,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC;6BAC1B;yBACF,EAAC;wBACF,IAAI,IAAI,KAAK,SAAS,EAAE;4BACtB,IAAI,KAAK,KAAK,KAAK,EAAE;gCACnB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gCACpB,KAAK,GAAG,IAAI,CAAC;6BACd;yBACF;6BAAM,IAAI,KAAK,KAAK,KAAK,EAAE;4BAC1B,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC;yBAClC;qBACF,EAAC,CAAC;iBACJ;gBAED,KAAK,GAAG,KAAK,CAAC;gBACd,IAAI,IAAI,CAAC,aAAa,EAAE;oBACtB,IAAI,CAAC,aAAa,CAAC,OAAO;;;;uBAAC,UAAC,CAAC,EAAE,KAAK;;4BAC5B,IAAI,GAAG,KAAK,CAAC,IAAI;;;2BAAC,UAAA,CAAC;4BACvB,IAAI,CAAC,YAAY,OAAO,EAAE;gCACxB,OAAO,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,KAAK,CAAC;6BAChC;yBACF,EAAC;wBACF,IAAI,IAAI,KAAK,SAAS,EAAE;4BACtB,IAAI,KAAK,KAAK,KAAK,EAAE;gCACnB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gCAC3B,KAAK,GAAG,IAAI,CAAC;6BACd;yBACF;6BAAM,IAAI,KAAK,KAAK,KAAK,EAAE;4BAC1B,KAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;yBACzB;qBACF,EAAC,CAAC;iBACJ;gBAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG;;;mBAAC,UAAA,CAAC;;wBACtB,WAAW,GAAG,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAI,CAAC,EAAE,CAAC;;wBAC1E,IAAI,GAAG,KAAK,CAAC,IAAI;;;uBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,KAAK,CAAC,GAAA,EAAC;oBAC9C,IAAI,IAAI,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,EAAE;wBAC7C,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;qBAC/C;yBAAM;wBACL,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;qBAClD;iBACF,EAAC,CAAC;aACJ;;;;;;;;QAKD,iDAAS;;;;YAAT;;oBACQ,GAAG,GAAG,MAAM,CAAC,iBAAiB,EAAE,UAAU,CAAC;gBACjD,IAAI,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,UAAU,EAAE;oBAC3C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;iBACpC;aACF;;;;;;;;QAKD,mDAAW;;;;YAAX;gBACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;oBAChB,GAAG,GAAG,MAAM,CAAC,mBAAmB,EAAE,UAAU,CAAC;gBACnD,IAAI,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,UAAU,EAAE;oBAC3C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;iBACrC;aACF;;;;;;;;QAKD,iDAAS;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACtB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACvB;;;;;;;;QAGD,mDAAW;;;;;;YAAX,UAAY,KAAa,EAAE,KAAa;gBACtC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACvB;;;;;;;;;;QAMD,mDAAW;;;;;YAAX,UAAY,MAAc;gBACxB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;gBACxD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACvB;;;;;;;;;;QAMD,mDAAW;;;;;YAAX,UAAY,QAAgB;gBAC1B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACvB;;;;;;;;;;QAMD,qDAAa;;;;;YAAb,UAAc,CAAU;;oBAChB,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,kBAAkB,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;gBAC/F,IAAI,CAAC,EAAE;oBACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;iBAC1D;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;iBAC7D;gBACD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;aACnB;;;;;;;;;QAKD,qDAAa;;;;;YAAb,UAAc,KAAK;gBAAnB,iBAWC;;oBAVO,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAChC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS;;;uBAAC,UAAA,CAAC;wBAC9C,IAAI,CAAC,YAAYQ,eAAY,EAAE;4BAC7B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BACtB,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;4BAChD,KAAI,CAAC,SAAS,EAAE,CAAC;yBAClB;qBACF,EAAC,CAAC;iBACJ;aACF;;;;;;;;QAKD,iDAAS;;;;YAAT;gBACE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;aAC3C;;;;;;;;;QAKD,sDAAc;;;;;YAAd,UAAe,OAAe;gBAC5B,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;aACnE;;oBAxPFP,YAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,skVAAsD;;qBAEvD;;;;;wBAX2EG,YAAS;wBAC7E,oBAAoB;wDA8CgCN,SAAM,SAACC,WAAQ;;;;8BARxEM,QAAK;8BAELC,SAAM;kCAENC,YAAS,SAAC,WAAW;;QAqNxB,oCAAC;KAzPD;;;;;;ACPA;QAMA;SAQC;;oBARAE,WAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,eAAY,EAAEC,iBAAW,EAAEC,yBAAmB;yBAC/C;wBACD,YAAY,EAAE,CAAC,sBAAsB,EAAE,6BAA6B,CAAC;wBACrE,OAAO,EAAE,CAAC,sBAAsB,EAAE,6BAA6B,CAAC;qBACjE;;QAED,0BAAC;KARD;;;;;;;;;;;;;;;;;;;;;;;;;"}
